FROM maven:3.6.3-jdk-8-slim AS build

ARG APP_ENV
ARG RESOURCES_TYPE
ARG PROJECT_ROOT_IN_CONTAINER
ARG JKS_FILE_NAME
# JKS_FULL_FILE_PATH_IN_CONTAINER must be the same as one on application.properties
ARG JKS_FULL_FILE_PATH_IN_CONTAINER

COPY ./ $PROJECT_ROOT_IN_CONTAINER
USER root
WORKDIR $PROJECT_ROOT_IN_CONTAINER

COPY ./.docker/ssl/$JKS_FILE_NAME $JKS_FULL_FILE_PATH_IN_CONTAINER
COPY ./src/main/resources/application.$RESOURCES_TYPE.properties  $PROJECT_ROOT_IN_CONTAINER/src/main/resources/application.properties
COPY ./src/main/resources/logback.$RESOURCES_TYPE.xml  $PROJECT_ROOT_IN_CONTAINER/src/main/resources/logback.xml

RUN --mount=type=cache,target=/root/.m2 mvn -f $PROJECT_ROOT_IN_CONTAINER/pom.xml -T100 clean install

FROM openjdk:8-alpine

ARG APP_ENV
ARG RESOURCES_TYPE
ARG PROJECT_ROOT_IN_CONTAINER
ARG FILE_STORAGE_ROOT_IN_CONTAINER
ARG JVM_XMS
ARG JVM_XMX
ARG JKS_FILE_NAME
# JKS_FULL_FILE_PATH_IN_CONTAINER must be the same as one on application.properties
ARG JKS_FULL_FILE_PATH_IN_CONTAINER

COPY --from=build $PROJECT_ROOT_IN_CONTAINER/ $PROJECT_ROOT_IN_CONTAINER

COPY ./.docker/ssl/$JKS_FILE_NAME $JKS_FULL_FILE_PATH_IN_CONTAINER

USER root
WORKDIR $PROJECT_ROOT_IN_CONTAINER

RUN cp $PROJECT_ROOT_IN_CONTAINER/target/*.jar  /app.jar

RUN ln -s $PROJECT_ROOT_IN_CONTAINER/.docker/entrypoint/$APP_ENV.sh /run-app.sh

RUN apk --no-cache add curl bash

ENV PROJECT_ROOT_IN_CONTAINER=$PROJECT_ROOT_IN_CONTAINER
ENV FILE_STORAGE_ROOT_IN_CONTAINER=$FILE_STORAGE_ROOT_IN_CONTAINER
ENV JVM_XMS=$JVM_XMS
ENV JVM_XMX=$JVM_XMX
ENV RESOURCES_TYPE=$RESOURCES_TYPE

ENTRYPOINT sh /run-app.sh $PROJECT_ROOT_IN_CONTAINER $FILE_STORAGE_ROOT_IN_CONTAINER $JVM_XMS $JVM_XMX $RESOURCES_TYPE && /bin/sh
