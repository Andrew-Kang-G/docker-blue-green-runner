# IMPORTANT - mac : docker.for.mac.localhost OR check IP. / win : host.docker.internal OR you can just type your host IP.
HOST_IP=host.docker.internal

APP_URL=http://localhost:3000
APP_ENV=local

USE_COMMERCIAL_SSL=yyy
COMMERCIAL_SSL_NAME=yyy
CONTAINER_SSL_VOLUME_PATH=

DOCKER_LAYER_CORRUPTION_RECOVERY=false

NGINX_RESTART=false
CONSUL_RESTART=false

# The method of acquiring Docker images:
# build (Used in developer's local environment or during Jenkins builds when a new image needs to be built, so this module is typically used)
# registry (Used on deployment servers where images are fetched from a repository, so this module is used)
# If you choose the "build" method, you don't need to input the values below since Dockerfile is used (no image is fetched from the Docker registry).
GIT_IMAGE_LOAD_FROM=build
GIT_IMAGE_LOAD_FROM_HOSTNAME=xxx
GIT_IMAGE_LOAD_FROM_PATHNAME=xxx
GIT_TOKEN_IMAGE_LOAD_FROM_USERNAME=xxx
GIT_TOKEN_IMAGE_LOAD_FROM_PASSWORD=xxx

PROJECT_NAME=node-express-boilerplate
PROJECT_LOCATION=/usr/src/node-app
PROJECT_PORT=3000
# Example (8093,8094,11000...)
ADDITIONAL_PORTS=

CONSUL_KEY_VALUE_STORE=http://consul:8500/v1/kv/deploy/node-express-boilerplate

# If you locate your project on ../ (upper folder)
HOST_ROOT_LOCATION=./samples/node-express-boilerplate
# If you locate your project's Dockerfile ../ (upper folder)
DOCKER_FILE_LOCATION=./samples/node-express-boilerplate

# This is for integrating health checkers such as "https://www.baeldung.com/spring-boot-actuators"
APP_HEALTH_CHECK_PATH=v1/docs
BAD_APP_HEALTH_CHECK_PATTERN=xxxxxxx
GOOD_APP_HEALTH_CHECK_PATTERN=docs

# This is for environment variables for docker-compose-app-${app_env}.
PROJECT_ENVIRONMENTS={"MONGODB_URL":"mongodb://host.docker.internal:27017/node-boilerplate","NODE_ENV":"development"}